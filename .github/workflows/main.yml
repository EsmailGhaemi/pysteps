name: CI

env:
  MINIMAL_DEPENDENCIES: cython numpy jsmin jsonschema matplotlib netCDF4 opencv pillow pyproj scipy dask
  OPTIONAL_DEPENDENCIES: dask pyfftw cartopy h5py PyWavelets pygrib
  TEST_DEPENDENCIES: pytest pytest-cov codecov

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  unit_tests:
    name: Unit Tests (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.6"] # ["3.6", "3.7", "3.8", "3.9"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install gcc for MacOSX
        if: matrix.os == 'macos-latest'
        run: |
          export HOMEBREW_NO_INSTALL_CLEANUP=1
          brew update-reset
          brew update
          brew install gcc@9
          which gcc-9
          export CC=gcc-9
          export CXX=g++-9
          export CXX1X=g++-9
          gcc-9 --version
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge, conda-forge/label/testing
          activate-environment: test-environment
      - name:  Install dependencies
        env:
          PACKAGES: ${{env.MINIMAL_DEPENDENCIES}} ${{env.OPTIONAL_DEPENDENCIES}} ${{env.TEST_DEPENDENCIES}}
        run: |
          conda install --quiet ${{env.PACKAGES}}
          conda info
          conda list
      - name: Install pysteps
        run: pip install ${GITHUB_WORKSPACE}
      - name: Run Tests
        run: |
          export PYSTEPS_BUILD_DIR=${GITHUB_WORKSPACE}
          bash ${GITHUB_WORKSPACE}/ci/run_tests.sh
